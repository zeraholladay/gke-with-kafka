version: '3.1'
services:
  zookeeper:
    image: ubuntu/zookeeper:edge
    container_name: kafka-zk
    ports:
      - 2181:2181
  
  kafka:
    image: ubuntu/kafka:3.1-22.04_beta
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    environment:
      ZOOKEEPER_HOST: host.docker.internal
      ZOOKEEPER_PORT: 2181

  django_redis:
    image: redis:6.2-alpine
    container_name: kafka-manager-redis
    restart: always
    ports:
      - '6379:6379'
    command: redis-server --save 20 1 --loglevel warning --requirepass local_development_only

  django_celery:
    build: .
    container_name: kafka-manager-celery
    environment:
      DATABASE_PASSWORD: local_development_only
      DATABASE_USER: postgres
      DATABASE_HOST: kafka-manager-db
      DATABASE_NAME: postgres
      DATABASE_PORT: 5432
      LOCAL_ADMIN_USER: admin
      LOCAL_ADMIN_PASS: admin
      REDIS_HOST: kafka-manager-redis
      REDIS_PASSWORD: local_development_only
    command: celery -A kafka_manager_app worker -B -l INFO
    volumes:
      - .:/code
    depends_on:
      - kafka
      - django_redis

  django_db:
    image: postgres:12
    restart: always
    container_name: kafka-manager-db
    ports:
      - 5432:5432
    environment:
      POSTGRES_PASSWORD: local_development_only

  djangoweb:
    build: .
    container_name: kafka-manager
    environment:
      DATABASE_PASSWORD: local_development_only
      DATABASE_USER: postgres
      DATABASE_HOST: kafka-manager-db
      DATABASE_NAME: postgres
      DATABASE_PORT: 5432
      LOCAL_ADMIN_USER: admin
      LOCAL_ADMIN_PASS: admin
      REDIS_HOST: kafka-manager-redis
      REDIS_PASSWORD: local_development_only
    command: >
      bash -c "sleep 2 && python3 manage.py migrate
      && echo \"from django.contrib.auth.models import User; import os; User.objects.filter(username=os.environ['LOCAL_ADMIN_USER']).exists() or User.objects.create_superuser(os.environ['LOCAL_ADMIN_USER'], '', os.environ['LOCAL_ADMIN_PASS'])\" | python3 manage.py shell
      && python3 manage.py runserver 0.0.0.0:8888"
    volumes:
      - .:/code
    ports:
      - 8888:8888
    depends_on:
      - django_db
      - kafka
      - django_celery
